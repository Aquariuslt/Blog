[
  {
    "filename": "karma-jawr-development-note",
    "md": "",
    "html": "",
    "metadata": {
      "title": "A Karma Plugin: Karma-JAWR Development Note",
      "created": "2018-04-01",
      "updated": "2018-04-01",
      "category": "Blog",
      "tags": [
        "Karma",
        "Node.js",
        "AngularJS",
        "JavaScript",
        "JAWR"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "基于karma的非分离式前端单元测试基础方案",
        "position": 0,
        "children": [],
        "pid": -1
      },
      {
        "level": 1,
        "id": "home",
        "position": 1,
        "children": [],
        "pid": -1
      },
      {
        "level": 1,
        "id": "pre-release-and-test",
        "position": 2,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "## Background\n### Why\n上一篇文章**基于Karma的非分离式前端单元测试基础方案**描述了在拆分基于JAWR的，前后端的方案的时候，无可避免的为中间编写一个插件的背景故事。\n\n#",
    "images": [],
    "permalink": "/2018/04/01/karma-jawr-development-note"
  },
  {
    "filename": "karma-based-traditional-java-web-frontend-unittest-solution",
    "md": "",
    "html": "",
    "metadata": {
      "title": "基于Karma的非分离式前端单元测试基础方案",
      "created": "2018-03-04",
      "updated": "2018-03-04",
      "category": "Blog",
      "tags": [
        "Java",
        "JAWR",
        "Karma",
        "JavaScript",
        "Webpack",
        "ExtJS",
        "Spring",
        "JSF",
        "SpringMVC"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "基于karma的非分离式前端单元测试基础方案",
        "position": 0,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "TL;DR\n\n## Background\n之前在为公司一个稍微有些年头的核心系统的代码寻找一个合理的单元测试方案，在摆弄了一段时间后，目前奠定了一个基于Karma的前端单元测试方案。\n\n如果你的项目符",
    "images": [
      "https://img.aquariuslt.com/posts/karma-jawr-generated-index.jpg"
    ],
    "permalink": "/2018/03/04/karma-based-traditional-java-web-frontend-unittest-solution"
  },
  {
    "filename": "latest-update-on-blog-app",
    "md": "",
    "html": "",
    "metadata": {
      "title": "Latest Update on Blog App",
      "created": "2018-03-03",
      "updated": "2018-03-03",
      "category": "Blog",
      "tags": [
        "Vue",
        "JavaScript",
        "Webpack",
        "Karma",
        "Gulp",
        "Github",
        "Blog"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "latest-update-on-blog-app",
        "position": 0,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "# Latest Update on Blog App\n\n\n\n结合最近学到的一些知识，了解的一些规范，和实践过的一些新姿势，重构了Blog的整个应用。\n目前Vue Branch版本从`4.0.0-be",
    "images": [
      "https://img.aquariuslt.com/posts/blog-resource-transfer-time.png"
    ],
    "permalink": "/2018/03/03/latest-update-on-blog-app"
  },
  {
    "filename": "review-2017",
    "md": "",
    "html": "",
    "metadata": {
      "title": "Year in Review 2017",
      "created": "2018-01-01",
      "updated": "2018-01-01",
      "category": "Others",
      "tags": [
        "Diary"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "year-in-review-2017",
        "position": 0,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "## Busy Year\n\n### Setup Frontend JS UnitTest framework for legacy code\n之前一直想为公司的一个主力项目的前端添加单元测试流程，由于",
    "images": [],
    "permalink": "/2018/01/01/review-2017"
  },
  {
    "filename": "vue-version-for-blog-app",
    "md": "",
    "html": "",
    "metadata": {
      "title": "Vue Version Blog App",
      "created": "2017-05-05",
      "updated": "2017-05-05",
      "category": "Blog",
      "tags": [
        "Blog",
        "Vue",
        "PWA"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "vue-version-blog-app",
        "position": 0,
        "children": [],
        "pid": -1
      },
      {
        "level": 1,
        "id": "deve",
        "position": 1,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "## Change Log\n\n这篇文章写于 2017-05-05. 下面一部分没实现的功能已经基本实现，并且做了更多的配置外化工作.\n\n详情将会发布到新的一篇文章里面.\n\n\n\n## Backgroun",
    "images": [],
    "permalink": "/2017/05/05/vue-version-for-blog-app"
  },
  {
    "filename": "new-version-blog-migration",
    "md": "",
    "html": "",
    "metadata": {
      "title": "Blog Structure Update",
      "created": "2017-03-12",
      "updated": "2017-03-12",
      "category": "Blog",
      "tags": [
        "Blog",
        "Angular"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "blog-structure-update",
        "position": 0,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "## Background\n\n最近正在接触学习`Angular2`+`RxJS`相关知识.当`Angular`发布了`@angular/cli`之后,\n内置的webpack工作流程提供了一个官方推荐的",
    "images": [
      "https://ooo.0o0.ooo/2017/03/13/58c5750dd1641.png"
    ],
    "permalink": "/2017/03/12/new-version-blog-migration"
  },
  {
    "filename": "review-2016",
    "md": "",
    "html": "",
    "metadata": {
      "title": "Year in Review 2016",
      "created": "2017-01-01",
      "updated": "2017-01-01",
      "category": "Others",
      "tags": [
        "Diary"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "year-in-review-2016",
        "position": 0,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "## The Year Not bad\n\n> 今年只能算是不差的一年.\n\n下半年没怎么更新博客,因为一直打算在用`angular2`+`SpringBoot Series`来更新下一代系统.\n\n反复修",
    "images": [],
    "permalink": "/2017/01/01/review-2016"
  },
  {
    "filename": "move-to-new-apartment",
    "md": "",
    "html": "",
    "metadata": {
      "title": "蜗居",
      "created": "2016-07-05",
      "updated": "2016-07-05",
      "category": "Blog",
      "tags": [
        "Diary"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "蜗居",
        "position": 0,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "## 前言\n毕业差不多有一年了,毕业时候租的一年的房子也到期了.  \n适逢有同事已经住到15年新建好的唐家人才公寓那边,那边房子环境不错,打听到详细情况后,发现最吸引我的还是里面两点:> 1. 里面没",
    "images": [
      "https://ww2.sinaimg.cn/large/006tNbRwgw1f5ntaislpcj31kw23u1i4.jpg",
      "https://ww3.sinaimg.cn/large/006tNbRwgw1f5ntaknst1j31kw23ue5u.jpg",
      "https://ww2.sinaimg.cn/large/006tNbRwgw1f5ntanbwkbj31kw23ue7y.jpg",
      "https://ww1.sinaimg.cn/large/006tNbRwgw1f5ntadsxnvj31kw23ux4c.jpg",
      "https://ww3.sinaimg.cn/large/006tNbRwgw1f5ntaqatgsj31kw23ub29.jpg",
      "https://ww2.sinaimg.cn/large/006tNbRwgw1f5nzfqeev8j31kw2t4hdt.jpg",
      "https://ww2.sinaimg.cn/large/006tNbRwgw1f5nzstrui8j31kw23unoc.jpg",
      "https://ww4.sinaimg.cn/large/006tNbRwgw1f5nzxwv747j31kw16ok78.jpg",
      "https://ww2.sinaimg.cn/large/006tNbRwgw1f5nzymbcpmj31kw16onej.jpg",
      "https://ww3.sinaimg.cn/large/006tNbRwgw1f5nz6fvo2vj31kw23ue5w.jpg",
      "https://ww2.sinaimg.cn/large/006tNbRwgw1f5nz4wdp7sj31kw16owvj.jpg",
      "https://ww4.sinaimg.cn/large/006tNbRwgw1f5o02np97tj31kw23unp4.jpg",
      "https://ww4.sinaimg.cn/large/006tNbRwgw1f5o0lgzik4j30q209adgk.jpg"
    ],
    "permalink": "/2016/07/05/move-to-new-apartment"
  },
  {
    "filename": "angular-ui-performance-tuning-experience",
    "md": "",
    "html": "",
    "metadata": {
      "title": "Angular.js常规性能优化阶段总结",
      "created": "2016-04-30",
      "updated": "2016-04-30",
      "category": "Blog",
      "tags": [
        "Angular",
        "JavaScript"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "angularjs常规性能优化阶段总结",
        "position": 0,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "## Background\n最近在为项目进行性能优化的时候,有总结到一些经验.  \n现在梳理一遍,方便以后排查问题.  \n\n## References\n在进行Angular页面的性能测试以及学习优化手",
    "images": [
      "https://img.alicdn.com/tfscom/TB1OmxkKXXXXXXIXXXXXXXXXXXX.png"
    ],
    "permalink": "/2016/04/30/angular-ui-performance-tuning-experience"
  },
  {
    "filename": "google-codejam-2016-qualification-round",
    "md": "",
    "html": "",
    "metadata": {
      "title": "Google CodeJam 2016 Qualification",
      "created": "2016-04-10",
      "updated": "2016-04-10",
      "category": "Note",
      "tags": [
        "Java",
        "Google"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "google-codejam-2016-qualification",
        "position": 0,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "今早结束的Google CodeJam 2016资格赛.\n由于智商问题和加班了一天,所以只能水出前面两道水题.\n但是还是稍微涨了点姿势.\n记录下解题的过程和一些小彩蛋.\n\n将我的A和B的Solutio",
    "images": [],
    "permalink": "/2016/04/10/google-codejam-2016-qualification-round"
  },
  {
    "filename": "hadoop-2-7-2-single-node-and-cluster-mode-installation-guide",
    "md": "",
    "html": "",
    "metadata": {
      "title": "Hadoop 2.7.2 单节点与集群安装部署",
      "created": "2016-04-09",
      "updated": "2016-04-09",
      "category": "Note",
      "tags": [
        "Hadoop",
        "Linux"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "hadoop-272-单节点与集群安装部署",
        "position": 0,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "## Background\n最近需要做一些大数据相关项目,至少需要搭建Hadoop的基本环境.\n由于用到的是目前版本号最高的Hadoop 2.7.2.跟文档比较多的2.6 以下的版本相比,在部署集群的",
    "images": [],
    "permalink": "/2016/04/09/hadoop-2-7-2-single-node-and-cluster-mode-installation-guide"
  },
  {
    "filename": "site-code-structure",
    "md": "",
    "html": "",
    "metadata": {
      "title": "Site 项目结构介绍",
      "created": "2016-03-06",
      "updated": "2016-03-06",
      "category": "Blog",
      "tags": [
        "Node",
        "JavaScript"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "site-项目结构介绍",
        "position": 0,
        "children": [],
        "pid": -1
      },
      {
        "level": 1,
        "id": "styles在配置文件",
        "position": 1,
        "children": [
          {
            "level": 2,
            "id": "",
            "position": 2,
            "children": [],
            "pid": 1
          }
        ],
        "pid": -1
      }
    ],
    "summary": "## Background\n应该说是第一个Node.js建站项目.\n目的是用于替换JavaWeb的后台\n而且可以在过程中练习一下调节样式的水平.\n\n项目本身的结构是从[JShelf](https://",
    "images": [],
    "permalink": "/2016/03/06/site-code-structure"
  },
  {
    "filename": "nodejs-oracledb-ora-21561-solution",
    "md": "",
    "html": "",
    "metadata": {
      "title": "Node.js oracledb \"ORA-21561 - OID generation failed\" 解决方案",
      "created": "2016-01-12",
      "updated": "2016-01-12",
      "category": "Debug",
      "tags": [
        "Node",
        "Linux"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "nodejs-oracledb-ora-21561-oid-generation-failed-解决方案",
        "position": 0,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "## Background\n千辛万苦在虚拟机的`CentOS 6`下编译好`oracledb`,运行时报错\n\"ORA-21561 - OID generation failed\"\n\n## Soluti",
    "images": [],
    "permalink": "/2016/01/12/nodejs-oracledb-ora-21561-solution"
  },
  {
    "filename": "nodejs-oracledb-install-on-rhel-6",
    "md": "",
    "html": "",
    "metadata": {
      "title": "RHEL(CentOS)6环境下安装node-oracledb",
      "created": "2016-01-11",
      "updated": "2016-01-11",
      "category": "Debug",
      "tags": [
        "Node",
        "Linux"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "rhelcentos6环境下安装node-oracledb",
        "position": 0,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "## Background\n最近准备升级一下PROD服务器上的`node-oracledb`版本.\n但是遇到一个很奇怪的现象,就是我本地无法构建出服务器上可用的`oracledb`.\n(因为部署方式是",
    "images": [],
    "permalink": "/2016/01/11/nodejs-oracledb-install-on-rhel-6"
  },
  {
    "filename": "review-2015",
    "md": "",
    "html": "",
    "metadata": {
      "title": "Year in Review 2015",
      "created": "2016-01-01",
      "updated": "2016-01-01",
      "category": "Others",
      "tags": [
        "Diary"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "year-in-review-2015",
        "position": 0,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "> 2016新年伊始,回顾2015年时间线.\n\n\n## 入手第一台Macbook\n\n我是在苹果推出`Retina`屏幕之后才开始关注`Macbook`系列的.\n源于在大学中对字体的纠结.从`Windo",
    "images": [
      "https://img.alicdn.com/tfscom/TB1OMYHLXXXXXaUaXXXXXXXXXXX.jpg",
      "https://img.alicdn.com/tfscom/TB1Glb2LXXXXXXgXFXXXXXXXXXX.jpg",
      "https://img.alicdn.com/tfscom/TB1d_YSLXXXXXaeXVXXXXXXXXXX.jpg",
      "https://img.alicdn.com/tfscom/TB11NzJLXXXXXcLXVXXXXXXXXXX.jpg"
    ],
    "permalink": "/2016/01/01/review-2015"
  },
  {
    "filename": "site-upgrade-plan",
    "md": "",
    "html": "",
    "metadata": {
      "title": "网站重构升级计划",
      "created": "2015-12-27",
      "updated": "2015-12-27",
      "category": "Blog",
      "tags": [
        "Site",
        "Blog",
        "VPS",
        "Node"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "网站重构升级计划",
        "position": 0,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "## Background\n\n大三的时候,终于接触了第一个能够证实上线的网站项目.\n虽然那个项目最后的完成度不咋地,但是从头到尾从需求分析,代码编写,\n最后部署到正式服务器上一条龙的经验还是被我全吃掉",
    "images": [],
    "permalink": "/2015/12/27/site-upgrade-plan"
  },
  {
    "filename": "nodejs-libclntsh-so-11-1-cannot-open-shared-object-file",
    "md": "",
    "html": "",
    "metadata": {
      "title": "Linux \"libclntsh.so.11.1 cannot open shared object file no such file or directory\"解决方案",
      "created": "2015-12-14",
      "updated": "2015-12-14",
      "category": "Debug",
      "tags": [
        "Ubuntu",
        "Linux",
        "Oracle",
        "Node"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "linux-libclntshso111-cannot-open-shared-object-file-no-such-file-or-directory解决方案",
        "position": 0,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "## Description\n\n`Ubuntu 14.04`\n`node v4.2.3`\n`oracledb v1.4.0`\n在正常安装好`Node.js`和`oracledb`,之后,用到oracl",
    "images": [],
    "permalink": "/2015/12/14/nodejs-libclntsh-so-11-1-cannot-open-shared-object-file"
  },
  {
    "filename": "ubuntu-mean-development-environment-setup",
    "md": "",
    "html": "",
    "metadata": {
      "title": "Linux Mean 开发环境搭建",
      "created": "2015-12-13",
      "updated": "2015-12-13",
      "category": "Blog",
      "tags": [
        "Ubuntu",
        "Linux",
        "IntelliJ IDEA"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "linux-mean-开发环境搭建",
        "position": 0,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "## Background\n最近一个项目中需要用到`Redis`和Node.js操作OracleDB,而Windows下开发就是屁事多.\n恰好用到的这两个东西,都写明了官方不支持Windows,`Re",
    "images": [
      "https://img.alicdn.com/tfscom/TB1PA2SKVXXXXX2XpXXXXXXXXXX.png",
      "https://img.alicdn.com/tfscom/TB10eYyKVXXXXc8aXXXXXXXXXXX.png",
      "https://img.alicdn.com/tfscom/TB100DBKVXXXXbCaXXXXXXXXXXX.png"
    ],
    "permalink": "/2015/12/13/ubuntu-mean-development-environment-setup"
  },
  {
    "filename": "beanutils-vs-reflection",
    "md": "",
    "html": "",
    "metadata": {
      "title": "记一次神奇的优化过程:Java反射 VS Apache BeanUtils VS Spring BeanUtils",
      "created": "2015-11-10",
      "updated": "2015-11-10",
      "category": "Blog",
      "tags": [
        "Java",
        "Apache"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "记一次神奇的优化过程java反射-vs-apache-beanutils-vs-spring-beanutils",
        "position": 0,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "## Background\n最近老大分配了个性能优化的任务,因为主要页面在Production上打开的时间太长,(大概7s?卧槽 第一次听到的时候还以为我听错了).\n居然这么慢..\n其实是有主程序大大",
    "images": [
      "https://img.alicdn.com/tfscom/TB1Q_QmKpXXXXaAXpXXXXXXXXXX.png"
    ],
    "permalink": "/2015/11/10/beanutils-vs-reflection"
  },
  {
    "filename": "apache-shiro-spring-integration",
    "md": "",
    "html": "",
    "metadata": {
      "title": "Spring 整合 Apache Shiro 实现各等级的权限管理",
      "created": "2015-10-25",
      "updated": "2015-10-25",
      "category": "Blog",
      "tags": [
        "Spring",
        "Security",
        "Shiro",
        "Java"
      ]
    },
    "toc": [
      {
        "level": 1,
        "id": "spring-整合-apache-shiro-实现各等级的权限管理",
        "position": 0,
        "children": [],
        "pid": -1
      }
    ],
    "summary": "## Background\n前几个月在做一个常规的权限隔离功能的时候,恰好使用过Apache Shiro.\nApache Shiro 是一款Java的安全框架,通常用作Web应用的权限校验,身份验证.",
    "images": [],
    "permalink": "/2015/10/25/apache-shiro-spring-integration"
  }
]

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@theme/r-material: post/containers: Posts # should call load posts when mount posts components 1`] = `
<inject-with-postStore(Object)
  postStore={
    PostStore {
      "$posts": Array [
        Object {
          "filename": "karma-jawr-development-note",
          "html": "",
          "images": Array [],
          "md": "",
          "metadata": Object {
            "category": "Blog",
            "created": "2018-04-01",
            "tags": Array [
              "Karma",
              "Node.js",
              "AngularJS",
              "JavaScript",
              "JAWR",
            ],
            "title": "A Karma Plugin: Karma-JAWR Development Note",
            "updated": "2018-04-01",
          },
          "permalink": "/2018/04/01/karma-jawr-development-note",
          "summary": "## Background
### Why
上一篇文章**基于Karma的非分离式前端单元测试基础方案**描述了在拆分基于JAWR的，前后端的方案的时候，无可避免的为中间编写一个插件的背景故事。

#",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "基于karma的非分离式前端单元测试基础方案",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
            Object {
              "children": Array [],
              "id": "home",
              "level": 1,
              "pid": -1,
              "position": 1,
            },
            Object {
              "children": Array [],
              "id": "pre-release-and-test",
              "level": 1,
              "pid": -1,
              "position": 2,
            },
          ],
        },
        Object {
          "filename": "karma-based-traditional-java-web-frontend-unittest-solution",
          "html": "",
          "images": Array [
            "https://img.aquariuslt.com/posts/karma-jawr-generated-index.jpg",
          ],
          "md": "",
          "metadata": Object {
            "category": "Blog",
            "created": "2018-03-04",
            "tags": Array [
              "Java",
              "JAWR",
              "Karma",
              "JavaScript",
              "Webpack",
              "ExtJS",
              "Spring",
              "JSF",
              "SpringMVC",
            ],
            "title": "基于Karma的非分离式前端单元测试基础方案",
            "updated": "2018-03-04",
          },
          "permalink": "/2018/03/04/karma-based-traditional-java-web-frontend-unittest-solution",
          "summary": "TL;DR

## Background
之前在为公司一个稍微有些年头的核心系统的代码寻找一个合理的单元测试方案，在摆弄了一段时间后，目前奠定了一个基于Karma的前端单元测试方案。

如果你的项目符",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "基于karma的非分离式前端单元测试基础方案",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
          ],
        },
        Object {
          "filename": "latest-update-on-blog-app",
          "html": "",
          "images": Array [
            "https://img.aquariuslt.com/posts/blog-resource-transfer-time.png",
          ],
          "md": "",
          "metadata": Object {
            "category": "Blog",
            "created": "2018-03-03",
            "tags": Array [
              "Vue",
              "JavaScript",
              "Webpack",
              "Karma",
              "Gulp",
              "Github",
              "Blog",
            ],
            "title": "Latest Update on Blog App",
            "updated": "2018-03-03",
          },
          "permalink": "/2018/03/03/latest-update-on-blog-app",
          "summary": "# Latest Update on Blog App



结合最近学到的一些知识，了解的一些规范，和实践过的一些新姿势，重构了Blog的整个应用。
目前Vue Branch版本从\`4.0.0-be",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "latest-update-on-blog-app",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
          ],
        },
        Object {
          "filename": "review-2017",
          "html": "",
          "images": Array [],
          "md": "",
          "metadata": Object {
            "category": "Others",
            "created": "2018-01-01",
            "tags": Array [
              "Diary",
            ],
            "title": "Year in Review 2017",
            "updated": "2018-01-01",
          },
          "permalink": "/2018/01/01/review-2017",
          "summary": "## Busy Year

### Setup Frontend JS UnitTest framework for legacy code
之前一直想为公司的一个主力项目的前端添加单元测试流程，由于",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "year-in-review-2017",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
          ],
        },
        Object {
          "filename": "vue-version-for-blog-app",
          "html": "",
          "images": Array [],
          "md": "",
          "metadata": Object {
            "category": "Blog",
            "created": "2017-05-05",
            "tags": Array [
              "Blog",
              "Vue",
              "PWA",
            ],
            "title": "Vue Version Blog App",
            "updated": "2017-05-05",
          },
          "permalink": "/2017/05/05/vue-version-for-blog-app",
          "summary": "## Change Log

这篇文章写于 2017-05-05. 下面一部分没实现的功能已经基本实现，并且做了更多的配置外化工作.

详情将会发布到新的一篇文章里面.



## Backgroun",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "vue-version-blog-app",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
            Object {
              "children": Array [],
              "id": "deve",
              "level": 1,
              "pid": -1,
              "position": 1,
            },
          ],
        },
        Object {
          "filename": "new-version-blog-migration",
          "html": "",
          "images": Array [
            "https://ooo.0o0.ooo/2017/03/13/58c5750dd1641.png",
          ],
          "md": "",
          "metadata": Object {
            "category": "Blog",
            "created": "2017-03-12",
            "tags": Array [
              "Blog",
              "Angular",
            ],
            "title": "Blog Structure Update",
            "updated": "2017-03-12",
          },
          "permalink": "/2017/03/12/new-version-blog-migration",
          "summary": "## Background

最近正在接触学习\`Angular2\`+\`RxJS\`相关知识.当\`Angular\`发布了\`@angular/cli\`之后,
内置的webpack工作流程提供了一个官方推荐的",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "blog-structure-update",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
          ],
        },
        Object {
          "filename": "review-2016",
          "html": "",
          "images": Array [],
          "md": "",
          "metadata": Object {
            "category": "Others",
            "created": "2017-01-01",
            "tags": Array [
              "Diary",
            ],
            "title": "Year in Review 2016",
            "updated": "2017-01-01",
          },
          "permalink": "/2017/01/01/review-2016",
          "summary": "## The Year Not bad

> 今年只能算是不差的一年.

下半年没怎么更新博客,因为一直打算在用\`angular2\`+\`SpringBoot Series\`来更新下一代系统.

反复修",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "year-in-review-2016",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
          ],
        },
        Object {
          "filename": "move-to-new-apartment",
          "html": "",
          "images": Array [
            "https://ww2.sinaimg.cn/large/006tNbRwgw1f5ntaislpcj31kw23u1i4.jpg",
            "https://ww3.sinaimg.cn/large/006tNbRwgw1f5ntaknst1j31kw23ue5u.jpg",
            "https://ww2.sinaimg.cn/large/006tNbRwgw1f5ntanbwkbj31kw23ue7y.jpg",
            "https://ww1.sinaimg.cn/large/006tNbRwgw1f5ntadsxnvj31kw23ux4c.jpg",
            "https://ww3.sinaimg.cn/large/006tNbRwgw1f5ntaqatgsj31kw23ub29.jpg",
            "https://ww2.sinaimg.cn/large/006tNbRwgw1f5nzfqeev8j31kw2t4hdt.jpg",
            "https://ww2.sinaimg.cn/large/006tNbRwgw1f5nzstrui8j31kw23unoc.jpg",
            "https://ww4.sinaimg.cn/large/006tNbRwgw1f5nzxwv747j31kw16ok78.jpg",
            "https://ww2.sinaimg.cn/large/006tNbRwgw1f5nzymbcpmj31kw16onej.jpg",
            "https://ww3.sinaimg.cn/large/006tNbRwgw1f5nz6fvo2vj31kw23ue5w.jpg",
            "https://ww2.sinaimg.cn/large/006tNbRwgw1f5nz4wdp7sj31kw16owvj.jpg",
            "https://ww4.sinaimg.cn/large/006tNbRwgw1f5o02np97tj31kw23unp4.jpg",
            "https://ww4.sinaimg.cn/large/006tNbRwgw1f5o0lgzik4j30q209adgk.jpg",
          ],
          "md": "",
          "metadata": Object {
            "category": "Blog",
            "created": "2016-07-05",
            "tags": Array [
              "Diary",
            ],
            "title": "蜗居",
            "updated": "2016-07-05",
          },
          "permalink": "/2016/07/05/move-to-new-apartment",
          "summary": "## 前言
毕业差不多有一年了,毕业时候租的一年的房子也到期了.  
适逢有同事已经住到15年新建好的唐家人才公寓那边,那边房子环境不错,打听到详细情况后,发现最吸引我的还是里面两点:> 1. 里面没",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "蜗居",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
          ],
        },
        Object {
          "filename": "angular-ui-performance-tuning-experience",
          "html": "",
          "images": Array [
            "https://img.alicdn.com/tfscom/TB1OmxkKXXXXXXIXXXXXXXXXXXX.png",
          ],
          "md": "",
          "metadata": Object {
            "category": "Blog",
            "created": "2016-04-30",
            "tags": Array [
              "Angular",
              "JavaScript",
            ],
            "title": "Angular.js常规性能优化阶段总结",
            "updated": "2016-04-30",
          },
          "permalink": "/2016/04/30/angular-ui-performance-tuning-experience",
          "summary": "## Background
最近在为项目进行性能优化的时候,有总结到一些经验.  
现在梳理一遍,方便以后排查问题.  

## References
在进行Angular页面的性能测试以及学习优化手",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "angularjs常规性能优化阶段总结",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
          ],
        },
        Object {
          "filename": "google-codejam-2016-qualification-round",
          "html": "",
          "images": Array [],
          "md": "",
          "metadata": Object {
            "category": "Note",
            "created": "2016-04-10",
            "tags": Array [
              "Java",
              "Google",
            ],
            "title": "Google CodeJam 2016 Qualification",
            "updated": "2016-04-10",
          },
          "permalink": "/2016/04/10/google-codejam-2016-qualification-round",
          "summary": "今早结束的Google CodeJam 2016资格赛.
由于智商问题和加班了一天,所以只能水出前面两道水题.
但是还是稍微涨了点姿势.
记录下解题的过程和一些小彩蛋.

将我的A和B的Solutio",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "google-codejam-2016-qualification",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
          ],
        },
        Object {
          "filename": "hadoop-2-7-2-single-node-and-cluster-mode-installation-guide",
          "html": "",
          "images": Array [],
          "md": "",
          "metadata": Object {
            "category": "Note",
            "created": "2016-04-09",
            "tags": Array [
              "Hadoop",
              "Linux",
            ],
            "title": "Hadoop 2.7.2 单节点与集群安装部署",
            "updated": "2016-04-09",
          },
          "permalink": "/2016/04/09/hadoop-2-7-2-single-node-and-cluster-mode-installation-guide",
          "summary": "## Background
最近需要做一些大数据相关项目,至少需要搭建Hadoop的基本环境.
由于用到的是目前版本号最高的Hadoop 2.7.2.跟文档比较多的2.6 以下的版本相比,在部署集群的",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "hadoop-272-单节点与集群安装部署",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
          ],
        },
        Object {
          "filename": "site-code-structure",
          "html": "",
          "images": Array [],
          "md": "",
          "metadata": Object {
            "category": "Blog",
            "created": "2016-03-06",
            "tags": Array [
              "Node",
              "JavaScript",
            ],
            "title": "Site 项目结构介绍",
            "updated": "2016-03-06",
          },
          "permalink": "/2016/03/06/site-code-structure",
          "summary": "## Background
应该说是第一个Node.js建站项目.
目的是用于替换JavaWeb的后台
而且可以在过程中练习一下调节样式的水平.

项目本身的结构是从[JShelf](https://",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "site-项目结构介绍",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "id": "",
                  "level": 2,
                  "pid": 1,
                  "position": 2,
                },
              ],
              "id": "styles在配置文件",
              "level": 1,
              "pid": -1,
              "position": 1,
            },
          ],
        },
        Object {
          "filename": "nodejs-oracledb-ora-21561-solution",
          "html": "",
          "images": Array [],
          "md": "",
          "metadata": Object {
            "category": "Debug",
            "created": "2016-01-12",
            "tags": Array [
              "Node",
              "Linux",
            ],
            "title": "Node.js oracledb \\"ORA-21561 - OID generation failed\\" 解决方案",
            "updated": "2016-01-12",
          },
          "permalink": "/2016/01/12/nodejs-oracledb-ora-21561-solution",
          "summary": "## Background
千辛万苦在虚拟机的\`CentOS 6\`下编译好\`oracledb\`,运行时报错
\\"ORA-21561 - OID generation failed\\"

## Soluti",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "nodejs-oracledb-ora-21561-oid-generation-failed-解决方案",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
          ],
        },
        Object {
          "filename": "nodejs-oracledb-install-on-rhel-6",
          "html": "",
          "images": Array [],
          "md": "",
          "metadata": Object {
            "category": "Debug",
            "created": "2016-01-11",
            "tags": Array [
              "Node",
              "Linux",
            ],
            "title": "RHEL(CentOS)6环境下安装node-oracledb",
            "updated": "2016-01-11",
          },
          "permalink": "/2016/01/11/nodejs-oracledb-install-on-rhel-6",
          "summary": "## Background
最近准备升级一下PROD服务器上的\`node-oracledb\`版本.
但是遇到一个很奇怪的现象,就是我本地无法构建出服务器上可用的\`oracledb\`.
(因为部署方式是",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "rhelcentos6环境下安装node-oracledb",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
          ],
        },
        Object {
          "filename": "review-2015",
          "html": "",
          "images": Array [
            "https://img.alicdn.com/tfscom/TB1OMYHLXXXXXaUaXXXXXXXXXXX.jpg",
            "https://img.alicdn.com/tfscom/TB1Glb2LXXXXXXgXFXXXXXXXXXX.jpg",
            "https://img.alicdn.com/tfscom/TB1d_YSLXXXXXaeXVXXXXXXXXXX.jpg",
            "https://img.alicdn.com/tfscom/TB11NzJLXXXXXcLXVXXXXXXXXXX.jpg",
          ],
          "md": "",
          "metadata": Object {
            "category": "Others",
            "created": "2016-01-01",
            "tags": Array [
              "Diary",
            ],
            "title": "Year in Review 2015",
            "updated": "2016-01-01",
          },
          "permalink": "/2016/01/01/review-2015",
          "summary": "> 2016新年伊始,回顾2015年时间线.


## 入手第一台Macbook

我是在苹果推出\`Retina\`屏幕之后才开始关注\`Macbook\`系列的.
源于在大学中对字体的纠结.从\`Windo",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "year-in-review-2015",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
          ],
        },
        Object {
          "filename": "site-upgrade-plan",
          "html": "",
          "images": Array [],
          "md": "",
          "metadata": Object {
            "category": "Blog",
            "created": "2015-12-27",
            "tags": Array [
              "Site",
              "Blog",
              "VPS",
              "Node",
            ],
            "title": "网站重构升级计划",
            "updated": "2015-12-27",
          },
          "permalink": "/2015/12/27/site-upgrade-plan",
          "summary": "## Background

大三的时候,终于接触了第一个能够证实上线的网站项目.
虽然那个项目最后的完成度不咋地,但是从头到尾从需求分析,代码编写,
最后部署到正式服务器上一条龙的经验还是被我全吃掉",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "网站重构升级计划",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
          ],
        },
        Object {
          "filename": "nodejs-libclntsh-so-11-1-cannot-open-shared-object-file",
          "html": "",
          "images": Array [],
          "md": "",
          "metadata": Object {
            "category": "Debug",
            "created": "2015-12-14",
            "tags": Array [
              "Ubuntu",
              "Linux",
              "Oracle",
              "Node",
            ],
            "title": "Linux \\"libclntsh.so.11.1 cannot open shared object file no such file or directory\\"解决方案",
            "updated": "2015-12-14",
          },
          "permalink": "/2015/12/14/nodejs-libclntsh-so-11-1-cannot-open-shared-object-file",
          "summary": "## Description

\`Ubuntu 14.04\`
\`node v4.2.3\`
\`oracledb v1.4.0\`
在正常安装好\`Node.js\`和\`oracledb\`,之后,用到oracl",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "linux-libclntshso111-cannot-open-shared-object-file-no-such-file-or-directory解决方案",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
          ],
        },
        Object {
          "filename": "ubuntu-mean-development-environment-setup",
          "html": "",
          "images": Array [
            "https://img.alicdn.com/tfscom/TB1PA2SKVXXXXX2XpXXXXXXXXXX.png",
            "https://img.alicdn.com/tfscom/TB10eYyKVXXXXc8aXXXXXXXXXXX.png",
            "https://img.alicdn.com/tfscom/TB100DBKVXXXXbCaXXXXXXXXXXX.png",
          ],
          "md": "",
          "metadata": Object {
            "category": "Blog",
            "created": "2015-12-13",
            "tags": Array [
              "Ubuntu",
              "Linux",
              "IntelliJ IDEA",
            ],
            "title": "Linux Mean 开发环境搭建",
            "updated": "2015-12-13",
          },
          "permalink": "/2015/12/13/ubuntu-mean-development-environment-setup",
          "summary": "## Background
最近一个项目中需要用到\`Redis\`和Node.js操作OracleDB,而Windows下开发就是屁事多.
恰好用到的这两个东西,都写明了官方不支持Windows,\`Re",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "linux-mean-开发环境搭建",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
          ],
        },
        Object {
          "filename": "beanutils-vs-reflection",
          "html": "",
          "images": Array [
            "https://img.alicdn.com/tfscom/TB1Q_QmKpXXXXaAXpXXXXXXXXXX.png",
          ],
          "md": "",
          "metadata": Object {
            "category": "Blog",
            "created": "2015-11-10",
            "tags": Array [
              "Java",
              "Apache",
            ],
            "title": "记一次神奇的优化过程:Java反射 VS Apache BeanUtils VS Spring BeanUtils",
            "updated": "2015-11-10",
          },
          "permalink": "/2015/11/10/beanutils-vs-reflection",
          "summary": "## Background
最近老大分配了个性能优化的任务,因为主要页面在Production上打开的时间太长,(大概7s?卧槽 第一次听到的时候还以为我听错了).
居然这么慢..
其实是有主程序大大",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "记一次神奇的优化过程java反射-vs-apache-beanutils-vs-spring-beanutils",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
          ],
        },
        Object {
          "filename": "apache-shiro-spring-integration",
          "html": "",
          "images": Array [],
          "md": "",
          "metadata": Object {
            "category": "Blog",
            "created": "2015-10-25",
            "tags": Array [
              "Spring",
              "Security",
              "Shiro",
              "Java",
            ],
            "title": "Spring 整合 Apache Shiro 实现各等级的权限管理",
            "updated": "2015-10-25",
          },
          "permalink": "/2015/10/25/apache-shiro-spring-integration",
          "summary": "## Background
前几个月在做一个常规的权限隔离功能的时候,恰好使用过Apache Shiro.
Apache Shiro 是一款Java的安全框架,通常用作Web应用的权限校验,身份验证.",
          "toc": Array [
            Object {
              "children": Array [],
              "id": "spring-整合-apache-shiro-实现各等级的权限管理",
              "level": 1,
              "pid": -1,
              "position": 0,
            },
          ],
        },
      ],
      "loaded": true,
    }
  }
>
  <o
    forwardRef={null}
    postStore={
      PostStore {
        "$posts": Array [
          Object {
            "filename": "karma-jawr-development-note",
            "html": "",
            "images": Array [],
            "md": "",
            "metadata": Object {
              "category": "Blog",
              "created": "2018-04-01",
              "tags": Array [
                "Karma",
                "Node.js",
                "AngularJS",
                "JavaScript",
                "JAWR",
              ],
              "title": "A Karma Plugin: Karma-JAWR Development Note",
              "updated": "2018-04-01",
            },
            "permalink": "/2018/04/01/karma-jawr-development-note",
            "summary": "## Background
### Why
上一篇文章**基于Karma的非分离式前端单元测试基础方案**描述了在拆分基于JAWR的，前后端的方案的时候，无可避免的为中间编写一个插件的背景故事。

#",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "基于karma的非分离式前端单元测试基础方案",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
              Object {
                "children": Array [],
                "id": "home",
                "level": 1,
                "pid": -1,
                "position": 1,
              },
              Object {
                "children": Array [],
                "id": "pre-release-and-test",
                "level": 1,
                "pid": -1,
                "position": 2,
              },
            ],
          },
          Object {
            "filename": "karma-based-traditional-java-web-frontend-unittest-solution",
            "html": "",
            "images": Array [
              "https://img.aquariuslt.com/posts/karma-jawr-generated-index.jpg",
            ],
            "md": "",
            "metadata": Object {
              "category": "Blog",
              "created": "2018-03-04",
              "tags": Array [
                "Java",
                "JAWR",
                "Karma",
                "JavaScript",
                "Webpack",
                "ExtJS",
                "Spring",
                "JSF",
                "SpringMVC",
              ],
              "title": "基于Karma的非分离式前端单元测试基础方案",
              "updated": "2018-03-04",
            },
            "permalink": "/2018/03/04/karma-based-traditional-java-web-frontend-unittest-solution",
            "summary": "TL;DR

## Background
之前在为公司一个稍微有些年头的核心系统的代码寻找一个合理的单元测试方案，在摆弄了一段时间后，目前奠定了一个基于Karma的前端单元测试方案。

如果你的项目符",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "基于karma的非分离式前端单元测试基础方案",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
            ],
          },
          Object {
            "filename": "latest-update-on-blog-app",
            "html": "",
            "images": Array [
              "https://img.aquariuslt.com/posts/blog-resource-transfer-time.png",
            ],
            "md": "",
            "metadata": Object {
              "category": "Blog",
              "created": "2018-03-03",
              "tags": Array [
                "Vue",
                "JavaScript",
                "Webpack",
                "Karma",
                "Gulp",
                "Github",
                "Blog",
              ],
              "title": "Latest Update on Blog App",
              "updated": "2018-03-03",
            },
            "permalink": "/2018/03/03/latest-update-on-blog-app",
            "summary": "# Latest Update on Blog App



结合最近学到的一些知识，了解的一些规范，和实践过的一些新姿势，重构了Blog的整个应用。
目前Vue Branch版本从\`4.0.0-be",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "latest-update-on-blog-app",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
            ],
          },
          Object {
            "filename": "review-2017",
            "html": "",
            "images": Array [],
            "md": "",
            "metadata": Object {
              "category": "Others",
              "created": "2018-01-01",
              "tags": Array [
                "Diary",
              ],
              "title": "Year in Review 2017",
              "updated": "2018-01-01",
            },
            "permalink": "/2018/01/01/review-2017",
            "summary": "## Busy Year

### Setup Frontend JS UnitTest framework for legacy code
之前一直想为公司的一个主力项目的前端添加单元测试流程，由于",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "year-in-review-2017",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
            ],
          },
          Object {
            "filename": "vue-version-for-blog-app",
            "html": "",
            "images": Array [],
            "md": "",
            "metadata": Object {
              "category": "Blog",
              "created": "2017-05-05",
              "tags": Array [
                "Blog",
                "Vue",
                "PWA",
              ],
              "title": "Vue Version Blog App",
              "updated": "2017-05-05",
            },
            "permalink": "/2017/05/05/vue-version-for-blog-app",
            "summary": "## Change Log

这篇文章写于 2017-05-05. 下面一部分没实现的功能已经基本实现，并且做了更多的配置外化工作.

详情将会发布到新的一篇文章里面.



## Backgroun",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "vue-version-blog-app",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
              Object {
                "children": Array [],
                "id": "deve",
                "level": 1,
                "pid": -1,
                "position": 1,
              },
            ],
          },
          Object {
            "filename": "new-version-blog-migration",
            "html": "",
            "images": Array [
              "https://ooo.0o0.ooo/2017/03/13/58c5750dd1641.png",
            ],
            "md": "",
            "metadata": Object {
              "category": "Blog",
              "created": "2017-03-12",
              "tags": Array [
                "Blog",
                "Angular",
              ],
              "title": "Blog Structure Update",
              "updated": "2017-03-12",
            },
            "permalink": "/2017/03/12/new-version-blog-migration",
            "summary": "## Background

最近正在接触学习\`Angular2\`+\`RxJS\`相关知识.当\`Angular\`发布了\`@angular/cli\`之后,
内置的webpack工作流程提供了一个官方推荐的",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "blog-structure-update",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
            ],
          },
          Object {
            "filename": "review-2016",
            "html": "",
            "images": Array [],
            "md": "",
            "metadata": Object {
              "category": "Others",
              "created": "2017-01-01",
              "tags": Array [
                "Diary",
              ],
              "title": "Year in Review 2016",
              "updated": "2017-01-01",
            },
            "permalink": "/2017/01/01/review-2016",
            "summary": "## The Year Not bad

> 今年只能算是不差的一年.

下半年没怎么更新博客,因为一直打算在用\`angular2\`+\`SpringBoot Series\`来更新下一代系统.

反复修",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "year-in-review-2016",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
            ],
          },
          Object {
            "filename": "move-to-new-apartment",
            "html": "",
            "images": Array [
              "https://ww2.sinaimg.cn/large/006tNbRwgw1f5ntaislpcj31kw23u1i4.jpg",
              "https://ww3.sinaimg.cn/large/006tNbRwgw1f5ntaknst1j31kw23ue5u.jpg",
              "https://ww2.sinaimg.cn/large/006tNbRwgw1f5ntanbwkbj31kw23ue7y.jpg",
              "https://ww1.sinaimg.cn/large/006tNbRwgw1f5ntadsxnvj31kw23ux4c.jpg",
              "https://ww3.sinaimg.cn/large/006tNbRwgw1f5ntaqatgsj31kw23ub29.jpg",
              "https://ww2.sinaimg.cn/large/006tNbRwgw1f5nzfqeev8j31kw2t4hdt.jpg",
              "https://ww2.sinaimg.cn/large/006tNbRwgw1f5nzstrui8j31kw23unoc.jpg",
              "https://ww4.sinaimg.cn/large/006tNbRwgw1f5nzxwv747j31kw16ok78.jpg",
              "https://ww2.sinaimg.cn/large/006tNbRwgw1f5nzymbcpmj31kw16onej.jpg",
              "https://ww3.sinaimg.cn/large/006tNbRwgw1f5nz6fvo2vj31kw23ue5w.jpg",
              "https://ww2.sinaimg.cn/large/006tNbRwgw1f5nz4wdp7sj31kw16owvj.jpg",
              "https://ww4.sinaimg.cn/large/006tNbRwgw1f5o02np97tj31kw23unp4.jpg",
              "https://ww4.sinaimg.cn/large/006tNbRwgw1f5o0lgzik4j30q209adgk.jpg",
            ],
            "md": "",
            "metadata": Object {
              "category": "Blog",
              "created": "2016-07-05",
              "tags": Array [
                "Diary",
              ],
              "title": "蜗居",
              "updated": "2016-07-05",
            },
            "permalink": "/2016/07/05/move-to-new-apartment",
            "summary": "## 前言
毕业差不多有一年了,毕业时候租的一年的房子也到期了.  
适逢有同事已经住到15年新建好的唐家人才公寓那边,那边房子环境不错,打听到详细情况后,发现最吸引我的还是里面两点:> 1. 里面没",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "蜗居",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
            ],
          },
          Object {
            "filename": "angular-ui-performance-tuning-experience",
            "html": "",
            "images": Array [
              "https://img.alicdn.com/tfscom/TB1OmxkKXXXXXXIXXXXXXXXXXXX.png",
            ],
            "md": "",
            "metadata": Object {
              "category": "Blog",
              "created": "2016-04-30",
              "tags": Array [
                "Angular",
                "JavaScript",
              ],
              "title": "Angular.js常规性能优化阶段总结",
              "updated": "2016-04-30",
            },
            "permalink": "/2016/04/30/angular-ui-performance-tuning-experience",
            "summary": "## Background
最近在为项目进行性能优化的时候,有总结到一些经验.  
现在梳理一遍,方便以后排查问题.  

## References
在进行Angular页面的性能测试以及学习优化手",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "angularjs常规性能优化阶段总结",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
            ],
          },
          Object {
            "filename": "google-codejam-2016-qualification-round",
            "html": "",
            "images": Array [],
            "md": "",
            "metadata": Object {
              "category": "Note",
              "created": "2016-04-10",
              "tags": Array [
                "Java",
                "Google",
              ],
              "title": "Google CodeJam 2016 Qualification",
              "updated": "2016-04-10",
            },
            "permalink": "/2016/04/10/google-codejam-2016-qualification-round",
            "summary": "今早结束的Google CodeJam 2016资格赛.
由于智商问题和加班了一天,所以只能水出前面两道水题.
但是还是稍微涨了点姿势.
记录下解题的过程和一些小彩蛋.

将我的A和B的Solutio",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "google-codejam-2016-qualification",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
            ],
          },
          Object {
            "filename": "hadoop-2-7-2-single-node-and-cluster-mode-installation-guide",
            "html": "",
            "images": Array [],
            "md": "",
            "metadata": Object {
              "category": "Note",
              "created": "2016-04-09",
              "tags": Array [
                "Hadoop",
                "Linux",
              ],
              "title": "Hadoop 2.7.2 单节点与集群安装部署",
              "updated": "2016-04-09",
            },
            "permalink": "/2016/04/09/hadoop-2-7-2-single-node-and-cluster-mode-installation-guide",
            "summary": "## Background
最近需要做一些大数据相关项目,至少需要搭建Hadoop的基本环境.
由于用到的是目前版本号最高的Hadoop 2.7.2.跟文档比较多的2.6 以下的版本相比,在部署集群的",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "hadoop-272-单节点与集群安装部署",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
            ],
          },
          Object {
            "filename": "site-code-structure",
            "html": "",
            "images": Array [],
            "md": "",
            "metadata": Object {
              "category": "Blog",
              "created": "2016-03-06",
              "tags": Array [
                "Node",
                "JavaScript",
              ],
              "title": "Site 项目结构介绍",
              "updated": "2016-03-06",
            },
            "permalink": "/2016/03/06/site-code-structure",
            "summary": "## Background
应该说是第一个Node.js建站项目.
目的是用于替换JavaWeb的后台
而且可以在过程中练习一下调节样式的水平.

项目本身的结构是从[JShelf](https://",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "site-项目结构介绍",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
              Object {
                "children": Array [
                  Object {
                    "children": Array [],
                    "id": "",
                    "level": 2,
                    "pid": 1,
                    "position": 2,
                  },
                ],
                "id": "styles在配置文件",
                "level": 1,
                "pid": -1,
                "position": 1,
              },
            ],
          },
          Object {
            "filename": "nodejs-oracledb-ora-21561-solution",
            "html": "",
            "images": Array [],
            "md": "",
            "metadata": Object {
              "category": "Debug",
              "created": "2016-01-12",
              "tags": Array [
                "Node",
                "Linux",
              ],
              "title": "Node.js oracledb \\"ORA-21561 - OID generation failed\\" 解决方案",
              "updated": "2016-01-12",
            },
            "permalink": "/2016/01/12/nodejs-oracledb-ora-21561-solution",
            "summary": "## Background
千辛万苦在虚拟机的\`CentOS 6\`下编译好\`oracledb\`,运行时报错
\\"ORA-21561 - OID generation failed\\"

## Soluti",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "nodejs-oracledb-ora-21561-oid-generation-failed-解决方案",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
            ],
          },
          Object {
            "filename": "nodejs-oracledb-install-on-rhel-6",
            "html": "",
            "images": Array [],
            "md": "",
            "metadata": Object {
              "category": "Debug",
              "created": "2016-01-11",
              "tags": Array [
                "Node",
                "Linux",
              ],
              "title": "RHEL(CentOS)6环境下安装node-oracledb",
              "updated": "2016-01-11",
            },
            "permalink": "/2016/01/11/nodejs-oracledb-install-on-rhel-6",
            "summary": "## Background
最近准备升级一下PROD服务器上的\`node-oracledb\`版本.
但是遇到一个很奇怪的现象,就是我本地无法构建出服务器上可用的\`oracledb\`.
(因为部署方式是",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "rhelcentos6环境下安装node-oracledb",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
            ],
          },
          Object {
            "filename": "review-2015",
            "html": "",
            "images": Array [
              "https://img.alicdn.com/tfscom/TB1OMYHLXXXXXaUaXXXXXXXXXXX.jpg",
              "https://img.alicdn.com/tfscom/TB1Glb2LXXXXXXgXFXXXXXXXXXX.jpg",
              "https://img.alicdn.com/tfscom/TB1d_YSLXXXXXaeXVXXXXXXXXXX.jpg",
              "https://img.alicdn.com/tfscom/TB11NzJLXXXXXcLXVXXXXXXXXXX.jpg",
            ],
            "md": "",
            "metadata": Object {
              "category": "Others",
              "created": "2016-01-01",
              "tags": Array [
                "Diary",
              ],
              "title": "Year in Review 2015",
              "updated": "2016-01-01",
            },
            "permalink": "/2016/01/01/review-2015",
            "summary": "> 2016新年伊始,回顾2015年时间线.


## 入手第一台Macbook

我是在苹果推出\`Retina\`屏幕之后才开始关注\`Macbook\`系列的.
源于在大学中对字体的纠结.从\`Windo",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "year-in-review-2015",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
            ],
          },
          Object {
            "filename": "site-upgrade-plan",
            "html": "",
            "images": Array [],
            "md": "",
            "metadata": Object {
              "category": "Blog",
              "created": "2015-12-27",
              "tags": Array [
                "Site",
                "Blog",
                "VPS",
                "Node",
              ],
              "title": "网站重构升级计划",
              "updated": "2015-12-27",
            },
            "permalink": "/2015/12/27/site-upgrade-plan",
            "summary": "## Background

大三的时候,终于接触了第一个能够证实上线的网站项目.
虽然那个项目最后的完成度不咋地,但是从头到尾从需求分析,代码编写,
最后部署到正式服务器上一条龙的经验还是被我全吃掉",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "网站重构升级计划",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
            ],
          },
          Object {
            "filename": "nodejs-libclntsh-so-11-1-cannot-open-shared-object-file",
            "html": "",
            "images": Array [],
            "md": "",
            "metadata": Object {
              "category": "Debug",
              "created": "2015-12-14",
              "tags": Array [
                "Ubuntu",
                "Linux",
                "Oracle",
                "Node",
              ],
              "title": "Linux \\"libclntsh.so.11.1 cannot open shared object file no such file or directory\\"解决方案",
              "updated": "2015-12-14",
            },
            "permalink": "/2015/12/14/nodejs-libclntsh-so-11-1-cannot-open-shared-object-file",
            "summary": "## Description

\`Ubuntu 14.04\`
\`node v4.2.3\`
\`oracledb v1.4.0\`
在正常安装好\`Node.js\`和\`oracledb\`,之后,用到oracl",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "linux-libclntshso111-cannot-open-shared-object-file-no-such-file-or-directory解决方案",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
            ],
          },
          Object {
            "filename": "ubuntu-mean-development-environment-setup",
            "html": "",
            "images": Array [
              "https://img.alicdn.com/tfscom/TB1PA2SKVXXXXX2XpXXXXXXXXXX.png",
              "https://img.alicdn.com/tfscom/TB10eYyKVXXXXc8aXXXXXXXXXXX.png",
              "https://img.alicdn.com/tfscom/TB100DBKVXXXXbCaXXXXXXXXXXX.png",
            ],
            "md": "",
            "metadata": Object {
              "category": "Blog",
              "created": "2015-12-13",
              "tags": Array [
                "Ubuntu",
                "Linux",
                "IntelliJ IDEA",
              ],
              "title": "Linux Mean 开发环境搭建",
              "updated": "2015-12-13",
            },
            "permalink": "/2015/12/13/ubuntu-mean-development-environment-setup",
            "summary": "## Background
最近一个项目中需要用到\`Redis\`和Node.js操作OracleDB,而Windows下开发就是屁事多.
恰好用到的这两个东西,都写明了官方不支持Windows,\`Re",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "linux-mean-开发环境搭建",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
            ],
          },
          Object {
            "filename": "beanutils-vs-reflection",
            "html": "",
            "images": Array [
              "https://img.alicdn.com/tfscom/TB1Q_QmKpXXXXaAXpXXXXXXXXXX.png",
            ],
            "md": "",
            "metadata": Object {
              "category": "Blog",
              "created": "2015-11-10",
              "tags": Array [
                "Java",
                "Apache",
              ],
              "title": "记一次神奇的优化过程:Java反射 VS Apache BeanUtils VS Spring BeanUtils",
              "updated": "2015-11-10",
            },
            "permalink": "/2015/11/10/beanutils-vs-reflection",
            "summary": "## Background
最近老大分配了个性能优化的任务,因为主要页面在Production上打开的时间太长,(大概7s?卧槽 第一次听到的时候还以为我听错了).
居然这么慢..
其实是有主程序大大",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "记一次神奇的优化过程java反射-vs-apache-beanutils-vs-spring-beanutils",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
            ],
          },
          Object {
            "filename": "apache-shiro-spring-integration",
            "html": "",
            "images": Array [],
            "md": "",
            "metadata": Object {
              "category": "Blog",
              "created": "2015-10-25",
              "tags": Array [
                "Spring",
                "Security",
                "Shiro",
                "Java",
              ],
              "title": "Spring 整合 Apache Shiro 实现各等级的权限管理",
              "updated": "2015-10-25",
            },
            "permalink": "/2015/10/25/apache-shiro-spring-integration",
            "summary": "## Background
前几个月在做一个常规的权限隔离功能的时候,恰好使用过Apache Shiro.
Apache Shiro 是一款Java的安全框架,通常用作Web应用的权限校验,身份验证.",
            "toc": Array [
              Object {
                "children": Array [],
                "id": "spring-整合-apache-shiro-实现各等级的权限管理",
                "level": 1,
                "pid": -1,
                "position": 0,
              },
            ],
          },
        ],
        "loaded": true,
      }
    }
  >
    <Memo(wrappedComponent)
      postStore={
        PostStore {
          "$posts": Array [
            Object {
              "filename": "karma-jawr-development-note",
              "html": "",
              "images": Array [],
              "md": "",
              "metadata": Object {
                "category": "Blog",
                "created": "2018-04-01",
                "tags": Array [
                  "Karma",
                  "Node.js",
                  "AngularJS",
                  "JavaScript",
                  "JAWR",
                ],
                "title": "A Karma Plugin: Karma-JAWR Development Note",
                "updated": "2018-04-01",
              },
              "permalink": "/2018/04/01/karma-jawr-development-note",
              "summary": "## Background
### Why
上一篇文章**基于Karma的非分离式前端单元测试基础方案**描述了在拆分基于JAWR的，前后端的方案的时候，无可避免的为中间编写一个插件的背景故事。

#",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "基于karma的非分离式前端单元测试基础方案",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
                Object {
                  "children": Array [],
                  "id": "home",
                  "level": 1,
                  "pid": -1,
                  "position": 1,
                },
                Object {
                  "children": Array [],
                  "id": "pre-release-and-test",
                  "level": 1,
                  "pid": -1,
                  "position": 2,
                },
              ],
            },
            Object {
              "filename": "karma-based-traditional-java-web-frontend-unittest-solution",
              "html": "",
              "images": Array [
                "https://img.aquariuslt.com/posts/karma-jawr-generated-index.jpg",
              ],
              "md": "",
              "metadata": Object {
                "category": "Blog",
                "created": "2018-03-04",
                "tags": Array [
                  "Java",
                  "JAWR",
                  "Karma",
                  "JavaScript",
                  "Webpack",
                  "ExtJS",
                  "Spring",
                  "JSF",
                  "SpringMVC",
                ],
                "title": "基于Karma的非分离式前端单元测试基础方案",
                "updated": "2018-03-04",
              },
              "permalink": "/2018/03/04/karma-based-traditional-java-web-frontend-unittest-solution",
              "summary": "TL;DR

## Background
之前在为公司一个稍微有些年头的核心系统的代码寻找一个合理的单元测试方案，在摆弄了一段时间后，目前奠定了一个基于Karma的前端单元测试方案。

如果你的项目符",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "基于karma的非分离式前端单元测试基础方案",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
              ],
            },
            Object {
              "filename": "latest-update-on-blog-app",
              "html": "",
              "images": Array [
                "https://img.aquariuslt.com/posts/blog-resource-transfer-time.png",
              ],
              "md": "",
              "metadata": Object {
                "category": "Blog",
                "created": "2018-03-03",
                "tags": Array [
                  "Vue",
                  "JavaScript",
                  "Webpack",
                  "Karma",
                  "Gulp",
                  "Github",
                  "Blog",
                ],
                "title": "Latest Update on Blog App",
                "updated": "2018-03-03",
              },
              "permalink": "/2018/03/03/latest-update-on-blog-app",
              "summary": "# Latest Update on Blog App



结合最近学到的一些知识，了解的一些规范，和实践过的一些新姿势，重构了Blog的整个应用。
目前Vue Branch版本从\`4.0.0-be",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "latest-update-on-blog-app",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
              ],
            },
            Object {
              "filename": "review-2017",
              "html": "",
              "images": Array [],
              "md": "",
              "metadata": Object {
                "category": "Others",
                "created": "2018-01-01",
                "tags": Array [
                  "Diary",
                ],
                "title": "Year in Review 2017",
                "updated": "2018-01-01",
              },
              "permalink": "/2018/01/01/review-2017",
              "summary": "## Busy Year

### Setup Frontend JS UnitTest framework for legacy code
之前一直想为公司的一个主力项目的前端添加单元测试流程，由于",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "year-in-review-2017",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
              ],
            },
            Object {
              "filename": "vue-version-for-blog-app",
              "html": "",
              "images": Array [],
              "md": "",
              "metadata": Object {
                "category": "Blog",
                "created": "2017-05-05",
                "tags": Array [
                  "Blog",
                  "Vue",
                  "PWA",
                ],
                "title": "Vue Version Blog App",
                "updated": "2017-05-05",
              },
              "permalink": "/2017/05/05/vue-version-for-blog-app",
              "summary": "## Change Log

这篇文章写于 2017-05-05. 下面一部分没实现的功能已经基本实现，并且做了更多的配置外化工作.

详情将会发布到新的一篇文章里面.



## Backgroun",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "vue-version-blog-app",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
                Object {
                  "children": Array [],
                  "id": "deve",
                  "level": 1,
                  "pid": -1,
                  "position": 1,
                },
              ],
            },
            Object {
              "filename": "new-version-blog-migration",
              "html": "",
              "images": Array [
                "https://ooo.0o0.ooo/2017/03/13/58c5750dd1641.png",
              ],
              "md": "",
              "metadata": Object {
                "category": "Blog",
                "created": "2017-03-12",
                "tags": Array [
                  "Blog",
                  "Angular",
                ],
                "title": "Blog Structure Update",
                "updated": "2017-03-12",
              },
              "permalink": "/2017/03/12/new-version-blog-migration",
              "summary": "## Background

最近正在接触学习\`Angular2\`+\`RxJS\`相关知识.当\`Angular\`发布了\`@angular/cli\`之后,
内置的webpack工作流程提供了一个官方推荐的",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "blog-structure-update",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
              ],
            },
            Object {
              "filename": "review-2016",
              "html": "",
              "images": Array [],
              "md": "",
              "metadata": Object {
                "category": "Others",
                "created": "2017-01-01",
                "tags": Array [
                  "Diary",
                ],
                "title": "Year in Review 2016",
                "updated": "2017-01-01",
              },
              "permalink": "/2017/01/01/review-2016",
              "summary": "## The Year Not bad

> 今年只能算是不差的一年.

下半年没怎么更新博客,因为一直打算在用\`angular2\`+\`SpringBoot Series\`来更新下一代系统.

反复修",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "year-in-review-2016",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
              ],
            },
            Object {
              "filename": "move-to-new-apartment",
              "html": "",
              "images": Array [
                "https://ww2.sinaimg.cn/large/006tNbRwgw1f5ntaislpcj31kw23u1i4.jpg",
                "https://ww3.sinaimg.cn/large/006tNbRwgw1f5ntaknst1j31kw23ue5u.jpg",
                "https://ww2.sinaimg.cn/large/006tNbRwgw1f5ntanbwkbj31kw23ue7y.jpg",
                "https://ww1.sinaimg.cn/large/006tNbRwgw1f5ntadsxnvj31kw23ux4c.jpg",
                "https://ww3.sinaimg.cn/large/006tNbRwgw1f5ntaqatgsj31kw23ub29.jpg",
                "https://ww2.sinaimg.cn/large/006tNbRwgw1f5nzfqeev8j31kw2t4hdt.jpg",
                "https://ww2.sinaimg.cn/large/006tNbRwgw1f5nzstrui8j31kw23unoc.jpg",
                "https://ww4.sinaimg.cn/large/006tNbRwgw1f5nzxwv747j31kw16ok78.jpg",
                "https://ww2.sinaimg.cn/large/006tNbRwgw1f5nzymbcpmj31kw16onej.jpg",
                "https://ww3.sinaimg.cn/large/006tNbRwgw1f5nz6fvo2vj31kw23ue5w.jpg",
                "https://ww2.sinaimg.cn/large/006tNbRwgw1f5nz4wdp7sj31kw16owvj.jpg",
                "https://ww4.sinaimg.cn/large/006tNbRwgw1f5o02np97tj31kw23unp4.jpg",
                "https://ww4.sinaimg.cn/large/006tNbRwgw1f5o0lgzik4j30q209adgk.jpg",
              ],
              "md": "",
              "metadata": Object {
                "category": "Blog",
                "created": "2016-07-05",
                "tags": Array [
                  "Diary",
                ],
                "title": "蜗居",
                "updated": "2016-07-05",
              },
              "permalink": "/2016/07/05/move-to-new-apartment",
              "summary": "## 前言
毕业差不多有一年了,毕业时候租的一年的房子也到期了.  
适逢有同事已经住到15年新建好的唐家人才公寓那边,那边房子环境不错,打听到详细情况后,发现最吸引我的还是里面两点:> 1. 里面没",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "蜗居",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
              ],
            },
            Object {
              "filename": "angular-ui-performance-tuning-experience",
              "html": "",
              "images": Array [
                "https://img.alicdn.com/tfscom/TB1OmxkKXXXXXXIXXXXXXXXXXXX.png",
              ],
              "md": "",
              "metadata": Object {
                "category": "Blog",
                "created": "2016-04-30",
                "tags": Array [
                  "Angular",
                  "JavaScript",
                ],
                "title": "Angular.js常规性能优化阶段总结",
                "updated": "2016-04-30",
              },
              "permalink": "/2016/04/30/angular-ui-performance-tuning-experience",
              "summary": "## Background
最近在为项目进行性能优化的时候,有总结到一些经验.  
现在梳理一遍,方便以后排查问题.  

## References
在进行Angular页面的性能测试以及学习优化手",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "angularjs常规性能优化阶段总结",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
              ],
            },
            Object {
              "filename": "google-codejam-2016-qualification-round",
              "html": "",
              "images": Array [],
              "md": "",
              "metadata": Object {
                "category": "Note",
                "created": "2016-04-10",
                "tags": Array [
                  "Java",
                  "Google",
                ],
                "title": "Google CodeJam 2016 Qualification",
                "updated": "2016-04-10",
              },
              "permalink": "/2016/04/10/google-codejam-2016-qualification-round",
              "summary": "今早结束的Google CodeJam 2016资格赛.
由于智商问题和加班了一天,所以只能水出前面两道水题.
但是还是稍微涨了点姿势.
记录下解题的过程和一些小彩蛋.

将我的A和B的Solutio",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "google-codejam-2016-qualification",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
              ],
            },
            Object {
              "filename": "hadoop-2-7-2-single-node-and-cluster-mode-installation-guide",
              "html": "",
              "images": Array [],
              "md": "",
              "metadata": Object {
                "category": "Note",
                "created": "2016-04-09",
                "tags": Array [
                  "Hadoop",
                  "Linux",
                ],
                "title": "Hadoop 2.7.2 单节点与集群安装部署",
                "updated": "2016-04-09",
              },
              "permalink": "/2016/04/09/hadoop-2-7-2-single-node-and-cluster-mode-installation-guide",
              "summary": "## Background
最近需要做一些大数据相关项目,至少需要搭建Hadoop的基本环境.
由于用到的是目前版本号最高的Hadoop 2.7.2.跟文档比较多的2.6 以下的版本相比,在部署集群的",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "hadoop-272-单节点与集群安装部署",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
              ],
            },
            Object {
              "filename": "site-code-structure",
              "html": "",
              "images": Array [],
              "md": "",
              "metadata": Object {
                "category": "Blog",
                "created": "2016-03-06",
                "tags": Array [
                  "Node",
                  "JavaScript",
                ],
                "title": "Site 项目结构介绍",
                "updated": "2016-03-06",
              },
              "permalink": "/2016/03/06/site-code-structure",
              "summary": "## Background
应该说是第一个Node.js建站项目.
目的是用于替换JavaWeb的后台
而且可以在过程中练习一下调节样式的水平.

项目本身的结构是从[JShelf](https://",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "site-项目结构介绍",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
                Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "id": "",
                      "level": 2,
                      "pid": 1,
                      "position": 2,
                    },
                  ],
                  "id": "styles在配置文件",
                  "level": 1,
                  "pid": -1,
                  "position": 1,
                },
              ],
            },
            Object {
              "filename": "nodejs-oracledb-ora-21561-solution",
              "html": "",
              "images": Array [],
              "md": "",
              "metadata": Object {
                "category": "Debug",
                "created": "2016-01-12",
                "tags": Array [
                  "Node",
                  "Linux",
                ],
                "title": "Node.js oracledb \\"ORA-21561 - OID generation failed\\" 解决方案",
                "updated": "2016-01-12",
              },
              "permalink": "/2016/01/12/nodejs-oracledb-ora-21561-solution",
              "summary": "## Background
千辛万苦在虚拟机的\`CentOS 6\`下编译好\`oracledb\`,运行时报错
\\"ORA-21561 - OID generation failed\\"

## Soluti",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "nodejs-oracledb-ora-21561-oid-generation-failed-解决方案",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
              ],
            },
            Object {
              "filename": "nodejs-oracledb-install-on-rhel-6",
              "html": "",
              "images": Array [],
              "md": "",
              "metadata": Object {
                "category": "Debug",
                "created": "2016-01-11",
                "tags": Array [
                  "Node",
                  "Linux",
                ],
                "title": "RHEL(CentOS)6环境下安装node-oracledb",
                "updated": "2016-01-11",
              },
              "permalink": "/2016/01/11/nodejs-oracledb-install-on-rhel-6",
              "summary": "## Background
最近准备升级一下PROD服务器上的\`node-oracledb\`版本.
但是遇到一个很奇怪的现象,就是我本地无法构建出服务器上可用的\`oracledb\`.
(因为部署方式是",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "rhelcentos6环境下安装node-oracledb",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
              ],
            },
            Object {
              "filename": "review-2015",
              "html": "",
              "images": Array [
                "https://img.alicdn.com/tfscom/TB1OMYHLXXXXXaUaXXXXXXXXXXX.jpg",
                "https://img.alicdn.com/tfscom/TB1Glb2LXXXXXXgXFXXXXXXXXXX.jpg",
                "https://img.alicdn.com/tfscom/TB1d_YSLXXXXXaeXVXXXXXXXXXX.jpg",
                "https://img.alicdn.com/tfscom/TB11NzJLXXXXXcLXVXXXXXXXXXX.jpg",
              ],
              "md": "",
              "metadata": Object {
                "category": "Others",
                "created": "2016-01-01",
                "tags": Array [
                  "Diary",
                ],
                "title": "Year in Review 2015",
                "updated": "2016-01-01",
              },
              "permalink": "/2016/01/01/review-2015",
              "summary": "> 2016新年伊始,回顾2015年时间线.


## 入手第一台Macbook

我是在苹果推出\`Retina\`屏幕之后才开始关注\`Macbook\`系列的.
源于在大学中对字体的纠结.从\`Windo",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "year-in-review-2015",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
              ],
            },
            Object {
              "filename": "site-upgrade-plan",
              "html": "",
              "images": Array [],
              "md": "",
              "metadata": Object {
                "category": "Blog",
                "created": "2015-12-27",
                "tags": Array [
                  "Site",
                  "Blog",
                  "VPS",
                  "Node",
                ],
                "title": "网站重构升级计划",
                "updated": "2015-12-27",
              },
              "permalink": "/2015/12/27/site-upgrade-plan",
              "summary": "## Background

大三的时候,终于接触了第一个能够证实上线的网站项目.
虽然那个项目最后的完成度不咋地,但是从头到尾从需求分析,代码编写,
最后部署到正式服务器上一条龙的经验还是被我全吃掉",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "网站重构升级计划",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
              ],
            },
            Object {
              "filename": "nodejs-libclntsh-so-11-1-cannot-open-shared-object-file",
              "html": "",
              "images": Array [],
              "md": "",
              "metadata": Object {
                "category": "Debug",
                "created": "2015-12-14",
                "tags": Array [
                  "Ubuntu",
                  "Linux",
                  "Oracle",
                  "Node",
                ],
                "title": "Linux \\"libclntsh.so.11.1 cannot open shared object file no such file or directory\\"解决方案",
                "updated": "2015-12-14",
              },
              "permalink": "/2015/12/14/nodejs-libclntsh-so-11-1-cannot-open-shared-object-file",
              "summary": "## Description

\`Ubuntu 14.04\`
\`node v4.2.3\`
\`oracledb v1.4.0\`
在正常安装好\`Node.js\`和\`oracledb\`,之后,用到oracl",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "linux-libclntshso111-cannot-open-shared-object-file-no-such-file-or-directory解决方案",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
              ],
            },
            Object {
              "filename": "ubuntu-mean-development-environment-setup",
              "html": "",
              "images": Array [
                "https://img.alicdn.com/tfscom/TB1PA2SKVXXXXX2XpXXXXXXXXXX.png",
                "https://img.alicdn.com/tfscom/TB10eYyKVXXXXc8aXXXXXXXXXXX.png",
                "https://img.alicdn.com/tfscom/TB100DBKVXXXXbCaXXXXXXXXXXX.png",
              ],
              "md": "",
              "metadata": Object {
                "category": "Blog",
                "created": "2015-12-13",
                "tags": Array [
                  "Ubuntu",
                  "Linux",
                  "IntelliJ IDEA",
                ],
                "title": "Linux Mean 开发环境搭建",
                "updated": "2015-12-13",
              },
              "permalink": "/2015/12/13/ubuntu-mean-development-environment-setup",
              "summary": "## Background
最近一个项目中需要用到\`Redis\`和Node.js操作OracleDB,而Windows下开发就是屁事多.
恰好用到的这两个东西,都写明了官方不支持Windows,\`Re",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "linux-mean-开发环境搭建",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
              ],
            },
            Object {
              "filename": "beanutils-vs-reflection",
              "html": "",
              "images": Array [
                "https://img.alicdn.com/tfscom/TB1Q_QmKpXXXXaAXpXXXXXXXXXX.png",
              ],
              "md": "",
              "metadata": Object {
                "category": "Blog",
                "created": "2015-11-10",
                "tags": Array [
                  "Java",
                  "Apache",
                ],
                "title": "记一次神奇的优化过程:Java反射 VS Apache BeanUtils VS Spring BeanUtils",
                "updated": "2015-11-10",
              },
              "permalink": "/2015/11/10/beanutils-vs-reflection",
              "summary": "## Background
最近老大分配了个性能优化的任务,因为主要页面在Production上打开的时间太长,(大概7s?卧槽 第一次听到的时候还以为我听错了).
居然这么慢..
其实是有主程序大大",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "记一次神奇的优化过程java反射-vs-apache-beanutils-vs-spring-beanutils",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
              ],
            },
            Object {
              "filename": "apache-shiro-spring-integration",
              "html": "",
              "images": Array [],
              "md": "",
              "metadata": Object {
                "category": "Blog",
                "created": "2015-10-25",
                "tags": Array [
                  "Spring",
                  "Security",
                  "Shiro",
                  "Java",
                ],
                "title": "Spring 整合 Apache Shiro 实现各等级的权限管理",
                "updated": "2015-10-25",
              },
              "permalink": "/2015/10/25/apache-shiro-spring-integration",
              "summary": "## Background
前几个月在做一个常规的权限隔离功能的时候,恰好使用过Apache Shiro.
Apache Shiro 是一款Java的安全框架,通常用作Web应用的权限校验,身份验证.",
              "toc": Array [
                Object {
                  "children": Array [],
                  "id": "spring-整合-apache-shiro-实现各等级的权限管理",
                  "level": 1,
                  "pid": -1,
                  "position": 0,
                },
              ],
            },
          ],
          "loaded": true,
        }
      }
    >
      <div
        className="makeStyles-root-1"
      >
        <WithStyles(ForwardRef(Grid))
          className="makeStyles-gridList-2"
          container={true}
          spacing={1}
        >
          <ForwardRef(Grid)
            className="makeStyles-gridList-2"
            classes={
              Object {
                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                "container": "MuiGrid-container",
                "direction-xs-column": "MuiGrid-direction-xs-column",
                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                "grid-lg-1": "MuiGrid-grid-lg-1",
                "grid-lg-10": "MuiGrid-grid-lg-10",
                "grid-lg-11": "MuiGrid-grid-lg-11",
                "grid-lg-12": "MuiGrid-grid-lg-12",
                "grid-lg-2": "MuiGrid-grid-lg-2",
                "grid-lg-3": "MuiGrid-grid-lg-3",
                "grid-lg-4": "MuiGrid-grid-lg-4",
                "grid-lg-5": "MuiGrid-grid-lg-5",
                "grid-lg-6": "MuiGrid-grid-lg-6",
                "grid-lg-7": "MuiGrid-grid-lg-7",
                "grid-lg-8": "MuiGrid-grid-lg-8",
                "grid-lg-9": "MuiGrid-grid-lg-9",
                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                "grid-lg-true": "MuiGrid-grid-lg-true",
                "grid-md-1": "MuiGrid-grid-md-1",
                "grid-md-10": "MuiGrid-grid-md-10",
                "grid-md-11": "MuiGrid-grid-md-11",
                "grid-md-12": "MuiGrid-grid-md-12",
                "grid-md-2": "MuiGrid-grid-md-2",
                "grid-md-3": "MuiGrid-grid-md-3",
                "grid-md-4": "MuiGrid-grid-md-4",
                "grid-md-5": "MuiGrid-grid-md-5",
                "grid-md-6": "MuiGrid-grid-md-6",
                "grid-md-7": "MuiGrid-grid-md-7",
                "grid-md-8": "MuiGrid-grid-md-8",
                "grid-md-9": "MuiGrid-grid-md-9",
                "grid-md-auto": "MuiGrid-grid-md-auto",
                "grid-md-true": "MuiGrid-grid-md-true",
                "grid-sm-1": "MuiGrid-grid-sm-1",
                "grid-sm-10": "MuiGrid-grid-sm-10",
                "grid-sm-11": "MuiGrid-grid-sm-11",
                "grid-sm-12": "MuiGrid-grid-sm-12",
                "grid-sm-2": "MuiGrid-grid-sm-2",
                "grid-sm-3": "MuiGrid-grid-sm-3",
                "grid-sm-4": "MuiGrid-grid-sm-4",
                "grid-sm-5": "MuiGrid-grid-sm-5",
                "grid-sm-6": "MuiGrid-grid-sm-6",
                "grid-sm-7": "MuiGrid-grid-sm-7",
                "grid-sm-8": "MuiGrid-grid-sm-8",
                "grid-sm-9": "MuiGrid-grid-sm-9",
                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                "grid-sm-true": "MuiGrid-grid-sm-true",
                "grid-xl-1": "MuiGrid-grid-xl-1",
                "grid-xl-10": "MuiGrid-grid-xl-10",
                "grid-xl-11": "MuiGrid-grid-xl-11",
                "grid-xl-12": "MuiGrid-grid-xl-12",
                "grid-xl-2": "MuiGrid-grid-xl-2",
                "grid-xl-3": "MuiGrid-grid-xl-3",
                "grid-xl-4": "MuiGrid-grid-xl-4",
                "grid-xl-5": "MuiGrid-grid-xl-5",
                "grid-xl-6": "MuiGrid-grid-xl-6",
                "grid-xl-7": "MuiGrid-grid-xl-7",
                "grid-xl-8": "MuiGrid-grid-xl-8",
                "grid-xl-9": "MuiGrid-grid-xl-9",
                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                "grid-xl-true": "MuiGrid-grid-xl-true",
                "grid-xs-1": "MuiGrid-grid-xs-1",
                "grid-xs-10": "MuiGrid-grid-xs-10",
                "grid-xs-11": "MuiGrid-grid-xs-11",
                "grid-xs-12": "MuiGrid-grid-xs-12",
                "grid-xs-2": "MuiGrid-grid-xs-2",
                "grid-xs-3": "MuiGrid-grid-xs-3",
                "grid-xs-4": "MuiGrid-grid-xs-4",
                "grid-xs-5": "MuiGrid-grid-xs-5",
                "grid-xs-6": "MuiGrid-grid-xs-6",
                "grid-xs-7": "MuiGrid-grid-xs-7",
                "grid-xs-8": "MuiGrid-grid-xs-8",
                "grid-xs-9": "MuiGrid-grid-xs-9",
                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                "grid-xs-true": "MuiGrid-grid-xs-true",
                "item": "MuiGrid-item",
                "justify-xs-center": "MuiGrid-justify-xs-center",
                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                "root": "MuiGrid-root",
                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                "zeroMinWidth": "MuiGrid-zeroMinWidth",
              }
            }
            container={true}
            spacing={1}
          >
            <div
              className="MuiGrid-root makeStyles-gridList-2 MuiGrid-container MuiGrid-spacing-xs-1"
            />
          </ForwardRef(Grid)>
        </WithStyles(ForwardRef(Grid))>
      </div>
    </Memo(wrappedComponent)>
  </o>
</inject-with-postStore(Object)>
`;
